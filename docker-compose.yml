version: '3.8'

services:
  # PostgreSQL Service
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  # MySQL Service
  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  # Redis Service (Cache)
  redis:
    image: redis:latest
    container_name: redis-cache
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # RabbitMQ Service (Message Broker)
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "15672:15672"  # RabbitMQ management UI
      - "5672:5672"    # RabbitMQ messaging port
    networks:
      - app_network

  # Elasticsearch Service (Search Engine)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - app_network

  # Kibana Service (UI for Elasticsearch)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"  # Kibana UI
    networks:
      - app_network

  # Nginx Service (Reverse Proxy)
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"  # HTTP port
    networks:
      - app_network

  # Prometheus Service (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"  # Prometheus UI
    networks:
      - app_network

  # Grafana Service (Dashboard for Prometheus)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
    ports:
      - "3000:3000"  # Grafana UI
    networks:
      - app_network

volumes:
  postgres_data:
  mongo_data:
  mysql_data:
  redis_data:
  es_data:

networks:
  app_network:
    driver: bridge
